# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'Package ES Standard Build'
  
variables:
  solution: '**/reliability-on-demand.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  clientAppDir: 'reliability-on-demand\ClientApp'

steps:
- task: NuGetToolInstaller@1

# Avoiding ambiguous reference for NuGet
- task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(clientAppDir)'
  displayName: 'npm install on ClientApp'

- task: Npm@1
  displayName: 'npm test'
  inputs:
    command: 'custom'
    workingDir: '$(clientAppDir)'
    customCommand: 'test'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-report.xml'
    failTaskOnFailedTests: true

- template: ./canaveralBuild.yml
  parameters:
    configuration: 'Release'
    fakeDeployment: true
    targets: 'Build'
    userName: $(BuildUserName)
    userPassword: $(BuildUserPassword)
    clientId: $(DeploymentClientId)
    clientSecret: $(DeploymentClientSecret)