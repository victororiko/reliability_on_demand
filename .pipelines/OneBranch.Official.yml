#################################################################################
#                         OneBranch Pipelines - Official                        #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: # https://aka.ms/obpipelines/triggers
  batch: true
  branches:
    include:
    - main

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
- group: 'Canaveral_ADO_Variable'
- name: CDP_DEFINITION_BUILD_COUNT
  value: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
- name: system.debug
  value: ${{ parameters.debug }}
- name: ENABLE_PRS_DELAYSIGN
  value: 0
- name: ROOT
  value: $(Build.SourcesDirectory)
- name: REPOROOT
  value: $(Build.SourcesDirectory)
- name: OUTPUTROOT
  value: $(REPOROOT)\out
- name: NUGET_XMLDOC_MODE
  value: none
- name: solution
  value: 'reliability-on-demand/reliability-on-demand.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
- name: WindowsContainerImage
  value: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
- name: clientAppDir
  value: 'reliability-on-demand\ClientApp'
- name: PathToLensJobs
  value: '' # use this to deploy all lens jobs: $(REPOROOT)/RIOD.lensorchestrator/**/*.json 
- name: DeployJobs
  value: 'false' # set to true if any lens jobs are found

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main
    

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    # by default OneBranch only fetches latest commit. We need past history to successfully identify any lens jobs to deploy
    git:
      fetchDepth: 2
      persistCredentials: true
      
    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      binskim:
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables:
          ob_outputDirectory: '$(REPOROOT)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
          ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}: # conditionally enable symbolsPublishing for master branch only
            ob_symbolsPublishing_enabled: false # https://aka.ms/obpipelines/symbols
          
          # ob_sdl_suppression_suppressionFile: $(Build.SourcesDirectory)\.gdn\build.official.gdnsuppress

        steps:
          ##################### Start Our Tasks #####################
          # .NET 

          # React
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(clientAppDir)/.npmrc'

          - task: CmdLine@2
            inputs:
              script: 'npm install'
              workingDirectory: '$(clientAppDir)'
            displayName: 'npm install'
          
          - task: CmdLine@2
            inputs:
              script: 'npm run prep'
              workingDirectory: '$(clientAppDir)'
            displayName: 'Format and Lint code'
          # Lens
          - task: PythonScript@0
            displayName: 'Identify lens jobs to deploy'
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(REPOROOT)\identify_changed_jobs.py' # populates PathToLensJobs variable if it finds any jobs to deploy
              arguments: '' # lookback period (default: -n 2) i.e. 2 commits - you can change this by providing n like '-n 50' to increase lookback period
            continueOnError: true
            
          - task: publish-to-geneva-orchestrator@2
            condition: and(succeeded(), contains(variables['DeployJobs'], 'true')) # ignore case: check for true or True. Learn more at https://learn.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#contains
            inputs:
              searchPath: '$(PathToLensJobs)' # default: '' 
              aadClientId: 'c8e92940-efd7-4b10-be12-76fb5a2414be'
              aadClientSecret: '$(AadClientSecret)'          
          # Canaveral
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(build.sourcesDirectory)'
              includeRootFolder: false
          # - task: PublishBuildArtifacts@1

          # Canaveral
          - template: canaveralBuild.yml@self
            parameters:
              configuration: 'Release'
              fakeDeployment: false
              targets: 'Build,Deploy'
              clientId: $(DeploymentClientId)
              clientSecret: $(DeploymentClientSecret)
            
          - task: NuGetToolInstaller@1
            inputs:
              versionSpec: 
              
          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: 'reliability-on-demand/reliability-on-demand.sln'
              feedsToUse: 'config'
              nugetConfigPath: 'reliability-on-demand/nuget.config'

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(clientAppDir)/.npmrc'

          - task: VSBuild@1
            inputs:
              solution: 'reliability-on-demand/reliability-on-demand.sln'
              vsVersion: '16.0'
              msbuildArgs: '/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:publishUrl="$(System.DefaultWorkingDirectory)\\WebAppContent"'
              platform: '$(BuildPlatform)'
              configuration: '$(BuildConfiguration)'
              msbuildArchitecture: 'x64'
              createLogFile: true
              logFileVerbosity: 'detailed'


          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)\\WebAppContent'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Conn_AutomaticDeploymentRIODPME'
              appType: 'webAppLinux'
              appName: 'reliabilityondemandpme'
              deployToSlotOrASE: true
              resourceGroupName: 'ReliabilityCloudRG'
              slotName: 'staging'
              package: '$(System.DefaultWorkingDirectory)\\WebAppContent'

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Conn_AutomaticDeploymentRIODPME'
              Action: 'Swap Slots'
              WebAppName: 'reliabilityondemandpme'
              ResourceGroupName: 'ReliabilityCloudRG'
              SourceSlot: 'staging'

          ##################### End Our Tasks #####################
          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: onebranch.pipeline.signing@1 # https://aka.ms/obpipelines/signing
            displayName: 'Sign output'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1;**/*.psm1'
              search_root: '$(Build.SourcesDirectory)'